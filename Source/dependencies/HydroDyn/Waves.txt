###################################################################################################################################
# Registry for Waves in the FAST Modularization Framework
# This Registry file is used to create MODULE Waves_Types  which contains all of the user-defined types needed in Waves.
# It also contains copy, destroy, pack,  and unpack routines associated with each defined data types.
# See NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword> <ModuleName/ModName> <TypeName>  <FieldType> <FieldName> <Dims>   <IO>  <DNAME>  <DESCRIP>   <UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# File last committed: $Date: 2014-09-24 11:10:30 -0600 (Wed, 24 Sep 2014) $
# (File) Revision #: $Rev: 508 $
# URL: $HeadURL: https://windsvn.nrel.gov/HydroDyn/trunk/Source/RegistryFiles/Waves.txt $
###################################################################################################################################

# ...... Include files (definitions from NWTC Library) ............................................................................
# make sure that the file name does not have any trailing white spaces!
include  Registry_NWTC_Library.txt

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
#   e.g.,  the name of the input file,  the file root name,etc.
#
typedef     Waves/Waves       InitInputType     CHARACTER(1024)      InputFile         -        -        -        "Name of the input file"   -
typedef     ^                 ^                 CHARACTER(1024)      DirRoot           -        -        -        "The name of the root file including the full path.  This may be useful if you want this routine to write a permanent record of what it does to be stored with the simulation results: the results should be stored in a file whose name (including path) is generated by appending any suitable extension to DirRoot." -
typedef     ^                 ^                 CHARACTER(1024)      GHWvFile          -        -        -        "The root name of GH Bladed files containing wave data"  -
typedef     ^                 ^                 INTEGER              UnSum             -        -        -        "The unit number for the HydroDyn summary file" -
typedef     ^                 ^                 ReKi                 Gravity           -        -        -        "Gravitational acceleration"  (m/s^2)
typedef     ^                 ^                 ReKi                 MSL2SWL           -        -        -        "Offset between still-water level and mean sea level  [positive upward; must be zero if using WAMIT]" (meters)
typedef     ^                 ^                 ReKi                 WvLowCOff         -        -        -        "Low cut-off frequency or lower frequency limit of the wave spectrum beyond which the wave spectrum is zeroed.  [used only when WaveMod=2,3,4]"   (rad/s)
typedef     ^                 ^                 ReKi                 WvHiCOff          -        -        -        "High cut-off frequency or upper frequency limit of the wave spectrum beyond which the wave spectrum is zeroed.  [used only when WaveMod=2,3,4]"   (rad/s)
typedef     ^                 ^                 ReKi                 WaveDir           -        -        -        "Mean incident wave propagation heading direction"   (degrees)
typedef     ^                 ^                 INTEGER              WaveNDir          -        -        -        "Number of wave directions [only used if WaveDirMod = 1] [Must be an odd number -- will be adjusted within the waves module]"     (-)
typedef     ^                 ^                 LOGICAL              WaveMultiDir      -        -        -        "Indicates the waves are multidirectional -- set by HydroDyn_Input"  -
typedef     ^                 ^                 INTEGER              WaveDirMod        -        -        -        "Directional wave spreading function {0: none, 1: COS2S} [only used if WaveMod=6]"   -
typedef     ^                 ^                 ReKi                 WaveDirSpread     -        -        -        "Spreading coefficient [only used if WaveMod=6 and WaveDirMod=1]"   -
typedef     ^                 ^                 ReKi                 WaveDirRange      -        -        -        "Range of wave directions (full range: WaveDir +/- WaveDirRange/2) [only used if WaveMod=6]"   (degrees)
typedef     ^                 ^                 DbKi                 WaveDT            -        -        -        "Time step for incident wave calculations"   (sec)
typedef     ^                 ^                 ReKi                 WaveHs            -        -        -        "Significant wave height of incident waves"  (meters)
typedef     ^                 ^                 INTEGER              WaveMod           -        -        -        "Incident wave kinematics model {0: none=still water, 1: plane progressive (regular), 2: JONSWAP/Pierson-Moskowitz spectrum (irregular), 3: white-noise spectrum, 4: user-defind spectrum from routine UserWaveSpctrm (irregular), 5: GH BLADED }" -
typedef     ^                 ^                 CHARACTER(80)        WaveModChr        -        -        -        "String to temporarially hold the value of the wave kinematics input line"
typedef     ^                 ^                 LOGICAL              WaveNDAmp         -        -        -        "Flag for normally-distributed amplitudes in incident waves spectrum [flag]"  -
typedef     ^                 ^                 ReKi                 WavePhase         -        -        -        "Specified phase for regular waves"    (radians)
typedef     ^                 ^                 ReKi                 WavePkShp         -        -        -        "Peak shape parameter of incident wave spectrum [1.0 for Pierson-Moskowitz]"  -
typedef     ^                 ^                 CHARACTER(80)        WavePkShpChr      -        -        -        "String to temporarially hold value of peak shape parameter input line" -
typedef     ^                 ^                 INTEGER              WaveSeed          {2}      -        -        "Random seeds of incident waves [-2147483648 to 2147483647]"   -
typedef     ^                 ^                 INTEGER              WaveStMod         -        -        -        "Model for stretching incident wave kinematics to instantaneous free surface {0: none=no stretching, 1: vertical stretching, 2: extrapolation stretching, 3: Wheeler stretching}"   -
typedef     ^                 ^                 DbKi                 WaveTMax          -        -        -        "Analysis time for incident wave calculations; the actual analysis time may be larger than this value in order for the maintain an effecient FFT"  (sec)
typedef     ^                 ^                 ReKi                 WaveTp            -        -        -        "Peak spectral period of incident waves"  (sec)
typedef     ^                 ^                 ReKi                 WtrDens           -        -        -        "Water density"   (kg/m^3)
typedef     ^                 ^                 ReKi                 WtrDpth           -        -        -        "Water depth"  (meters)
typedef     ^                 ^                 INTEGER              NWaveElev         -        -        -        "Number of points where the incident wave elevations can be output"  -
typedef     ^                 ^                 ReKi                 WaveElevxi        {:}      -        -        "xi-coordinates for points where the incident wave elevations can be output"  (meters)
typedef     ^                 ^                 ReKi                 WaveElevyi        {:}      -        -        "yi-coordinates for points where the incident wave elevations can be output"  (meters)
typedef     ^                 ^                 ReKi                 WaveElevXY        {:}{:}   -        -        "Supplied by Driver:  X-Y locations for WaveElevation output (for visualization).  Index 1 corresponds to X or Y coordinate.  Index 2 corresponds to point number."    -
typedef     ^                 ^                 INTEGER              NWaveKin0         -        -        -        "Number of points where the incident wave kinematics will be computed"  -
typedef     ^                 ^                 ReKi                 WaveKinxi0        {:}      -        -        "xi-coordinates for points where the incident wave kinematics will be computed; these are relative to the mean sea level"  (meters)
typedef     ^                 ^                 ReKi                 WaveKinyi0        {:}      -        -        "yi-coordinates for points where the incident wave kinematics will be computed; these are relative to the mean sea level"  (meters)
typedef     ^                 ^                 ReKi                 WaveKinzi0        {:}      -        -        "zi-coordinates for points where the incident wave kinematics will be computed; these are relative to the mean sea level"  (meters)
typedef     ^                 ^                 ReKi                 CurrVxi           {:}      -        -        "xi-component of the current velocity at elevation i" (m/s)
typedef     ^                 ^                 ReKi                 CurrVyi           {:}      -        -        "yi-component of the current velocity at elevation i" (m/s)
typedef     ^                 ^                 ReKi                 PCurrVxiPz0       -        -        -        "xi-component of the partial derivative of the current velocity at elevation near mean sea level"  (m/s)
typedef     ^                 ^                 ReKi                 PCurrVyiPz0       -        -        -        "yi-component of the partial derivative of the current velocity at elevation near mean sea level"  (m/s)


# Define outputs from the initialization routine here:
#
typedef     ^                 InitOutputType    ReKi                 WaveElevC0        {:}{:}   -        -        "Discrete Fourier transform of the instantaneous elevation of incident waves at the platform reference point.  First column is real part, second column is imaginary part"   (meters)
typedef     ^                 ^                 ReKi                 WaveDirArr        {:}      -        -        "Wave direction array.  Each frequency has a unique direction of WaveNDir > 1" (degrees)
typedef     ^                 ^                 ReKi                 WaveDirMin        -        -        -        "Minimum wave direction."  (degrees)
typedef     ^                 ^                 ReKi                 WaveDirMax        -        -        -        "Maximum wave direction."  (degrees)
typedef     ^                 ^                 ReKi                 WaveAcc0          {:}{:}{:} -       -        "Instantaneous acceleration of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, accounting for stretching, at each of the NWaveKin0 points along a vertical line passing through the platform reference point where the incident wave kinematics will be computed" (m/s^2)
typedef     ^                 ^                 ReKi                 WaveDir           -        -        -        "Incident wave propagation heading direction" (degrees)
typedef     ^                 ^                 INTEGER              WaveNDir          -        -        -        "Number of wave directions [only used if WaveDirMod = 1] [Must be an odd number -- will be adjusted within the waves module]"     (-)
typedef     ^                 ^                 LOGICAL              WaveMultiDir      -        -        -        "Indicates the waves are multidirectional -- set by HydroDyn_Input"  -
typedef     ^                 ^                 ReKi                 WaveDOmega        -        -        -        "Frequency step for incident wave calculations" (rad/s)
typedef     ^                 ^                 ReKi                 WaveDynP0         {:}{:}   -        -        "Instantaneous dynamic pressure of incident waves                                                          , accounting for stretching, at each of the NWaveKin0 points along a vertical line passing through the platform reference point where the incident wave kinematics will be computed" (N/m^2)
typedef     ^                 ^                 ReKi                 WaveElev          {:}{:}   -        -        "Instantaneous elevation time-series of incident waves at each of the NWaveElev points where the incident wave elevations can be output" (meters)

typedef     ^                 ^                 ReKi                 WaveElevSeries    {:}{:}   -        -        "Instantaneous elevation time-series at each of the points given by WaveElevXY.  Used for making movies of the waves. First index is the timestep. Second index is XY point number corresponding to second index of WaveElevXY." (m)

typedef     ^                 ^                 ReKi                 WaveVel0          {:}{:}{:} -       -        "Instantaneous velocity     of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, accounting for stretching, at each of the NWaveKin0 points along a vertical line passing through the platform reference point where the incident wave kinematics will be computed (The values include both the velocity of incident waves and the velocity of current.)" (m/s)
typedef     ^                 ^                 ReKi                 WaveKinzi0        {:}      -        -        "zi-coordinates for points along a vertical line passing through the platform reference point where the incident wave kinematics will be computed; these are relative to the mean see level" (meters)
typedef     ^                 ^                 ReKi                 WaveTime          {:}      -        -        "Simulation times at which the instantaneous elevation of, velocity of, acceleration of, and loads associated with the incident waves are determined" (sec)
typedef     ^                 ^                 DbKi                 WaveTMax          -        -        -        "Analysis time for incident wave calculations; the actual analysis time may be larger than this value in order for the maintain an effecient FFT"  (sec)

typedef     ^                 ^                 ReKi                 RhoXg             -        -        -        "= WtrDens*Gravity" -
typedef     ^                 ^                 INTEGER              NStepWave         -        -        -        "Total number of frequency components = total number of time steps in the incident wave" -
typedef     ^                 ^                 INTEGER              NStepWave2        -        -        -        "NStepWave / 2" -


# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef     ^              ContinuousStateType  ReKi                 DummyContState    -        -        -        "Remove this variable if you have continuous states"  -


# Define discrete (nondifferentiable) states here:
typedef     ^              DiscreteStateType    ReKi                 DummyDiscState    -        -        -        "Remove this variable if you have discrete states" -


# Define constraint states here:
typedef     ^              ConstraintStateType  ReKi                 DummyConstrState  -        -        -        "Remove this variable if you have constraint states"  -


# Define any data that are not considered actual states here:
#   e.g. data used only for efficiency purposes (indices for searching in an array,  copies of previous calculations of output at a given time, etc.)
typedef     ^              OtherStateType       INTEGER              DummyOtherState   -        -        -        "Remove this variable if you have other states" -


# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef     ^                 ParameterType     DbKi                 DT                -        -        -        "Time step for continuous state integration & discrete state update" seconds
typedef     ^                 ^                 DbKi                 WaveTMax          -        -        -        "Analysis time for incident wave calculations; the actual analysis time may be larger than this value in order for the maintain an effecient FFT"  (sec)
typedef     ^                 ^                 INTEGER              NStepWave         -        -        -        "Total number of frequency components = total number of time steps in the incident wave" -
typedef     ^                 ^                 INTEGER              WaveNDir          -        -        -        "Number of wave directions [only used if WaveDirMod = 1] [Must be an odd number -- will be adjusted within the waves module]"     (-)
typedef     ^                 ^                 LOGICAL              WaveMultiDir      -        -        -        "Indicates the waves are multidirectional -- set by HydroDyn_Input"  -


# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
#typedef    ^                 InputType         MeshType             MeshedInput       -        -        -        "Meshed input data"  -

# Define inputs that are not on this mesh here:
typedef     ^                 InputType         ReKi                 DummyInput        -        -        -        "Remove this variable if you have input data"   -


# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
#typedef    ^                 OutputType        MeshType             MeshedOutput      -        -        -        "Meshed output data" -

# Define outputs that are not on this mesh here:
typedef     ^                 OutputType        ReKi                 DummyOutput       -        -        -        "Remove this variable if you have output data"  -
