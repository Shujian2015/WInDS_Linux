#================================================================================#
# This makefile created by B. Jonkman on 14-Jan-2015,                            #
# (c) 2015      National Renewable Energy Laboratory                             #
#                                                                                #
# This makefile has been tested on Windows 7 with gfortran.                      #
# This makefile works with mingw32-make.exe.                                     #
#                                                                                #
#================================================================================#

   # 32-bit or 64-bit?
BITS = 32
#BITS = 64


   # Location of source files for FAST, and its modules.

#FAST_DIR     = ../Source
FAST_DIR     = C:/Users/bjonkman/Documents/DATA/DesignCodes/simulators/FAST/SVNdirectory/branches/BJonkman/Source

NWTC_Lib_DIR = $(FAST_DIR)/dependencies/NWTC_Library
NETLIB_DIR   = $(FAST_DIR)/dependencies/NetLib
MAP_DIR      = $(FAST_DIR)/dependencies/MAP
#BIN_DIR      = ../bin
BIN_DIR      = $(FAST_DIR)/../bin



   # Names and locations of the Registry, MAP libraries, and instructions for linking with LAPACK.
   # You will probably need to change these for your system.

ifeq ($(OS),Windows_NT)
   Registry     = $(BIN_DIR)/Registry_win32.exe
   MAP_lib      = $(MAP_DIR)/MAP_win32.lib
   LAPACK_LINK  = -llapack -lblas -LC:/LAPACK/win32
else
   Registry     = registry.exe
   MAP_lib      = $(MAP_DIR)/MAP.so
   LAPACK_LINK  = -llapack -lblas
endif


   # Name of compiler to use and flags to use.
FC      = gfortran

FFLAGS  = -O2 -m$(BITS) -fbacktrace -ffree-line-length-none -x f95-cpp-input
LDFLAGS = -O2 -m$(BITS) -fbacktrace -Wl,--stack=999999999,--large-address-aware

#FFLAGS  = -O0 -m$(BITS) -fbacktrace -ffree-line-length-none -x f95-cpp-input -g -pg
#LDFLAGS = -O0 -m$(BITS) -fbacktrace -Wl,--stack=999999999,--large-address-aware -g -pg

# -mthreads
# some useful gfortran options:
#  -DFPE_TRAP_ENABLED
#  -Wl,--large-address-aware   # not necessary when $(BITS) is 64 (64-bit target)
#  -Wl,--stack=999999999       # not necessary when $(BITS) is 64
#  -Wconversion-extra -Wconversion
#  -fdefault-real-8 -fcheck=bounds,do,mem,pointer -std=f2003 -O0 -v -Wall
#  -pg                          # generate debugging info for debugger
# http://gcc.gnu.org/onlinedocs/gfortran/Option-Index.html#Option-Index
#
# makefile:
# --warn-undefined-variables


   # Precision.

# Use "SingPrec" for single precision and "DoubPrec" for double precision. You may also need to change an option switch to make constants DP.
PREC = SingPrec




   # Destination and RootName for executable

OUTPUT_NAME = map_driver
DEST_DIR    = ..\bin

   #==========================================================#
   # You should not need to change anything beyond this point #
   #==========================================================#

   # System-specific settings.

ifeq ($(OS),Windows_NT)
      # Windows
   DEL_CMD   = del
   EXE_EXT   = _gwin$(BITS).exe
   INTER_DIR = Obj_win$(BITS)
   MD_CMD    = @mkdir
   OBJ_EXT   = .obj
   PATH_SEP  = \\
   SYS_FILE  = SysGnuWin
else
      # Linux
   DEL_CMD   = rm -f
   EXE_EXT   = _glin$(BITS)
   INTER_DIR = Obj_lin$(BITS)
   MD_CMD    = @mkdir -p
   OBJ_EXT   = .o
   PATH_SEP  = /
   SYS_FILE  = SysGnuLinux
endif


   # Source files (by module)

LIB_SOURCES =           \
	$(PREC).f90          \
	NWTC_Base.f90        \
	$(SYS_FILE).f90      \
	NWTC_Library_Types.f90 \
	NWTC_IO.f90          \
	NWTC_Num.f90         \
	ModMesh_Types.f90    \
	ModMesh.f90          \
	ModMesh_Mapping.f90  \
	NWTC_Library.f90

NETLIB_SOURCES=            \
	NWTC_ScaLAPACK.f90      \
	NWTC_FFTPACK.f90        \
	NWTC_LAPACK.f90         \
	fftpack4.1.f            \
	dlasrt2.f               \
	slasrt2.f


MAP_SOURCES =              \
	MAP_Types.f90           \
	MAP.f90                 \
	map_glue.f90



vpath %.f90 $(NWTC_Lib_DIR) $(MAP_DIR) $(NETLIB_DIR)
vpath %.f   $(NETLIB_DIR)
vpath %.mod $(INTER_DIR)
vpath %.obj $(INTER_DIR)
vpath %.txt $(MAP_DIR)


ALL_SOURCES = $(LIB_SOURCES) $(NETLIB_SOURCES) $(MAP_SOURCES)
tmp_objs1   = $(ALL_SOURCES:.f90=.obj)
tmp_objs2   = $(tmp_objs1:.F90=.obj)       #note the upper case here (from IceFloe)
ALL_OBJS    = $(tmp_objs2:.f=.obj)


   # Rule to do everything.

all:     default
# use this for "all" for debugging: print variables:
#all:     ; $(info $$IceF_SOURCES is [${IceF_SOURCES}]) echo debugging
#
default:  $(INTER_DIR) $(DEST_DIR)/$(OUTPUT_NAME)$(EXE_EXT)


   # General rules for compliling the files.

%.obj: %.f90
	$(FC) -I $(INTER_DIR) $(FFLAGS) -c $< -o $(INTER_DIR)/$@ -J $(INTER_DIR) -B $(INTER_DIR)

%.obj: %.F90
	$(FC) -I $(INTER_DIR) $(FFLAGS) -c $< -o $(INTER_DIR)/$@ -J $(INTER_DIR) -B $(INTER_DIR)

#bjj: what is $(F77)????
%.obj: %.f
	$(F77) -I $(INTER_DIR) $(FFLAGS) -c $< -o $(INTER_DIR)/$@ -J $(INTER_DIR) -B $(INTER_DIR)



   # General rules for creating _Types.f90 files from Registry files.



   #  Dependency rules.
#NWTC Library dependency rules:
NWTC_Base.obj:              $(PREC).obj
$(SYS_FILE).obj:            NWTC_Base.obj
NWTC_Library_Types.obj:     $(SYS_FILE).obj
NWTC_IO.obj:                NWTC_Library_Types.obj
NWTC_Num.obj:               NWTC_IO.obj
ModMesh_Types.obj:          NWTC_Num.obj
ModMesh.obj:                ModMesh_Types.obj
ModMesh_Mapping.obj:        ModMesh.obj NWTC_LAPACK.obj
NWTC_Library.obj:           ModMesh.obj  ModMesh_Mapping.obj

NWTC_LAPACK.obj:            NWTC_Base.obj
NWTC_ScaLAPACK.obj:         NWTC_Base.obj dlasrt2.obj slasrt2.obj
NWTC_FFTPACK.obj:           NWTC_Library.obj fftpack4.1.obj
fftpack4.1.obj:             $(PREC).obj


# MAP dependency rules:
MAP_Types.obj:              NWTC_Library.obj
MAP.obj:                    NWTC_Library.obj  MAP_Types.obj

map_glue.obj:               MAP.obj



#$(OUTPUT_NAME)$(EXE_EXT): map_driver.obj

   # Make sure the destination directory for the intermediate files exist.

$(INTER_DIR):
	$(MD_CMD) $(INTER_DIR)


   # For linking program.

$(DEST_DIR)/$(OUTPUT_NAME)$(EXE_EXT): $(ALL_OBJS) | $(INTER_DIR)
	$(FC) $(LDFLAGS) -I $(INTER_DIR) -o $(DEST_DIR)/$(OUTPUT_NAME)$(EXE_EXT) \
	$(foreach src, $(ALL_OBJS), $(addprefix $(INTER_DIR)/,$(src))) $(MAP_lib) $(LAPACK_LINK)

   # Cleanup afterwards.

clean:
	$(DEL_CMD) $(INTER_DIR)$(PATH_SEP)*.mod $(INTER_DIR)$(PATH_SEP)*.obj

#superclean:
#	$(DEL_CMD) $(INTER_DIR)$(PATH_SEP)*.mod $(INTER_DIR)$(PATH_SEP)*.obj
# also delete all the registry-generated ModuleName_Types.f90 files